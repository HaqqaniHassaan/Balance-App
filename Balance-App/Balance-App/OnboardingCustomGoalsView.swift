import SwiftUIstruct OnboardingCustomGoalsView: View {    @ObservedObject var coreDataViewModel: CoreDataViewModel    // State to track navigation    @State private var navigateToContentView = false    @State private var customGoals: [String] = [] // Placeholder for custom goals    @State private var newGoalText: String = "" // Text field input for a new goal    var body: some View {        NavigationStack {            VStack(spacing: 20) {                // Header Text                Text("Set Your Custom Goals")                    .font(.largeTitle)                    .fontWeight(.bold)                    .padding(.top, 50)                    .foregroundColor(.white)                    .shadow(color: .black.opacity(0.8), radius: 1, x: 0, y: 1)                // New Goal Input                HStack {                    TextField("Enter new goal...", text: $newGoalText)                        .padding()                        .background(Color.white.opacity(0.2))                        .cornerRadius(10)                        .foregroundColor(.white)                        .shadow(color: .black.opacity(0.8), radius: 1, x: 0, y: 1)                    // Add Goal Button                    Button(action: addGoal) {                        Image(systemName: "plus.circle.fill")                            .resizable()                            .frame(width: 40, height: 40)                            .foregroundColor(.cyan)                    }                    .padding(.leading, 5)                }                .padding(.horizontal)                // List of Custom Goals                ScrollView {                    VStack(spacing: 10) {                        ForEach(customGoals, id: \.self) { goal in                            customGoalRow(goal)                        }                    }                    .padding(.horizontal)                }                Spacer()                // Finish Button                Button(action: {                    coreDataViewModel.completeOnboarding() // Mark onboarding as complete                    navigateToContentView = true // Navigate to main content                }) {                    Text("Finish")                        .font(.headline)                        .foregroundColor(.white)                        .padding()                        .frame(maxWidth: .infinity)                        .background(Color.cyan)                        .cornerRadius(15)                        .padding(.horizontal, 20)                        .shadow(color: .black.opacity(0.8), radius: 1, x: 0, y: 1)                }                .fullScreenCover(isPresented: $navigateToContentView) {                    ContentView(coreDataViewModel: coreDataViewModel) // Pass the existing CoreDataViewModel                }                Spacer()            }            .padding()            .background(                Image("background_image")                    .resizable()                    .scaledToFill()                    .edgesIgnoringSafeArea(.all)            )        }    }    // Helper function to add a new custom goal    private func addGoal() {        guard !newGoalText.isEmpty else { return }        customGoals.append(newGoalText)        newGoalText = ""    }    // Helper function for individual custom goal rows    private func customGoalRow(_ goal: String) -> some View {        HStack {            Text(goal)                .foregroundColor(.white)                .padding()                .shadow(color: .black.opacity(0.8), radius: 1, x: 0, y: 1)            Spacer()            // Placeholder edit/delete buttons for future functionality            HStack(spacing: 10) {                Button(action: {}) {                    Image(systemName: "pencil.circle.fill")                        .resizable()                        .frame(width: 30, height: 30)                        .foregroundColor(.cyan)                }                Button(action: {                    if let index = customGoals.firstIndex(of: goal) {                        customGoals.remove(at: index)                    }                }) {                    Image(systemName: "minus.circle.fill")                        .resizable()                        .frame(width: 30, height: 30)                        .foregroundColor(.red)                }            }        }        .padding()        .frame(maxWidth: .infinity)        .background(Color.white.opacity(0.2))        .cornerRadius(10)    }}#Preview {    OnboardingCustomGoalsView(coreDataViewModel: CoreDataViewModel())}