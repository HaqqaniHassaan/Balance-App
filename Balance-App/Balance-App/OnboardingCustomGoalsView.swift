import SwiftUIstruct OnboardingCustomGoalsView: View {    @ObservedObject var coreDataViewModel: CoreDataViewModel    // State to track navigation    @State private var navigateToContentView = false    var body: some View {        NavigationStack {            VStack(spacing: 20) {                // Header Text                Text("Set Your Custom Goals")                    .font(.largeTitle)                    .fontWeight(.bold)                    .padding(.top, 50)                    .foregroundColor(.white)                    .shadow(radius: 5)                if let customGoalsEntity = coreDataViewModel.customGoalsEntity {                    // Toggle for Custom Goal                    Toggle("Track Custom Goal", isOn: Binding(                        get: { customGoalsEntity.isCustomGoalTracked },                        set: { coreDataViewModel.updateCustomGoal(for: \.isCustomGoalTracked, value: $0) }                    ))                    .toggleStyle(SwitchToggleStyle(tint: .blue))                    .padding()                    .background(Color.white.opacity(0.8))                    .cornerRadius(12)                    .padding(.horizontal, 20)                    // Placeholder toggles for potential future custom goals                    Toggle("Track Additional Goal 1 (Placeholder)", isOn: .constant(false))                        .toggleStyle(SwitchToggleStyle(tint: .blue))                        .padding()                        .background(Color.white.opacity(0.8))                        .cornerRadius(12)                        .padding(.horizontal, 20)                    Toggle("Track Additional Goal 2 (Placeholder)", isOn: .constant(false))                        .toggleStyle(SwitchToggleStyle(tint: .blue))                        .padding()                        .background(Color.white.opacity(0.8))                        .cornerRadius(12)                        .padding(.horizontal, 20)                } else {                    Text("Loading custom goals...")                        .foregroundColor(.white)                        .padding()                }                Spacer()                // Finish Button                Button(action: {                    coreDataViewModel.completeOnboarding() // Mark onboarding as complete                    navigateToContentView = true // Navigate to main content                }) {                    Text("Finish")                        .font(.headline)                        .foregroundColor(.white)                        .padding()                        .frame(maxWidth: .infinity)                        .background(Color.green)                        .cornerRadius(15)                        .padding(.horizontal, 20)                }                .fullScreenCover(isPresented: $navigateToContentView) {                    ContentView()                }                Spacer()            }            .padding()            .background(                Image("background_image")                    .resizable()                    .scaledToFill()                    .edgesIgnoringSafeArea(.all)            )        }    }}#Preview {    OnboardingCustomGoalsView(coreDataViewModel: CoreDataViewModel())}