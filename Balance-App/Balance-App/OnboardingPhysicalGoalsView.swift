import SwiftUIstruct OnboardingPhysicalGoalsView: View {    @ObservedObject var coreDataViewModel: CoreDataViewModel    // State to track navigation    @State private var navigateToMentalHealth = false    var body: some View {        NavigationStack {            VStack(spacing: 20) {                Text("Select Your Physical Goals")                    .font(.title)                    .fontWeight(.bold)                    .padding(.top, 100)                    .foregroundColor(.white)                VStack{                    if let fitnessEntity = coreDataViewModel.fitnessEntity {                        Toggle("Track Workouts", isOn: Binding(                            get: { fitnessEntity.isWorkoutTracked },                            set: { coreDataViewModel.updateFitnessGoal(for: \.isWorkoutTracked, value: $0) }                        ))                                                Toggle("Track Calories", isOn: Binding(                            get: { fitnessEntity.isCaloriesTracked },                            set: { coreDataViewModel.updateFitnessGoal(for: \.isCaloriesTracked, value: $0) }                        ))                                                Toggle("Track Steps", isOn: Binding(                            get: { fitnessEntity.isStepsTracked },                            set: { coreDataViewModel.updateFitnessGoal(for: \.isStepsTracked, value: $0) }                        ))                                                Toggle("Track Stretching", isOn: Binding(                            get: { fitnessEntity.isStretchingTracked },                            set: { coreDataViewModel.updateFitnessGoal(for: \.isStretchingTracked, value: $0) }                        ))                                                Toggle("Track Water Intake", isOn: Binding(                            get: { fitnessEntity.isWaterTracked },                            set: { coreDataViewModel.updateFitnessGoal(for: \.isWaterTracked, value: $0) }                        ))                    } else {                        Text("Loading fitness goals...")                            .foregroundColor(.white)                    }                }                .padding()                .frame(maxWidth: .infinity)                .background(Color.white)                .cornerRadius(20)                .padding()                                                Spacer()                                // Next Button                Button(action: {                    navigateToMentalHealth = true                }) {                    Text("Next")                        .font(.headline)                        .foregroundColor(.white)                        .padding()                        .frame(maxWidth: .infinity)                        .background(Color.green)                        .cornerRadius(15)                        .padding(.horizontal, 20)                }                .navigationDestination(isPresented: $navigateToMentalHealth) {                    OnboardingMentalHealthGoalsView(coreDataViewModel: coreDataViewModel)                }                                Spacer()            }            .padding()            .background(                Image("background_image")                    .resizable()                    .scaledToFill()                    .edgesIgnoringSafeArea(.all)            )        }    }}#Preview {    OnboardingPhysicalGoalsView(coreDataViewModel: CoreDataViewModel())}